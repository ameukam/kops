apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium-operator
  namespace: kube-system

---

apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: hubble-relay
  namespace: kube-system

---

apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBtV0s5WlY3b3VHSWpmV0RZOEtxZ1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURrd01qQTVNalEwTVZvWERUSTRNRGt3TVRBNQpNalEwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0ZGE4N0x6ZEVRTEtvWU5uZExuS2xta3hmVURybHNWWHR3TzBuanlGaUl3UG1qRzIKZ2xYT2NHTFd3c0xhc3NiU2grbFlsTEhiMTJscU42K2Yram5zSno5UGdCSk1aRDVTdDVNazErandzZVlJdXFVbQp1QXJSSEpCM05Xd0k3bXliaEx3NFRvcnJrWkJ3QndQaDBDNHZYUmpkcEFDVXFBdkF6MlpOV0dueFVnaXdoMFlUCjczMUNRUDJpQmd0OWJWbE9OOXRIVzRxS3lrcS9OWXFrRnVqYnovNDFaUG52cWN1d3VJcXVZRU1SL2I2T0ordWcKL0NxTjFXS3c4ZHVPT2xOREZ6VFZQUDA0YTdKRzlsNVRtKzVEekVtNnUvemhzakN4dXcxUCtuRUk3Tjc5bWkrbQpkTnM1VXZNaWZ5cVBaYy80eFZxbmlkZzhEdHdSNDljTG0xSEZxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQjI2czNsR2loMzdkbzdJZkhoM0VaL3ZSV3A4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0daemdHUHpUTFpEUHQxMkJzK3hJT1ptczdRTzY0YzAzYVBtbUV3M1R5SjRJdzVoM0RtU2NHCnZtUWc5ckE2bS9OVE9Sd3I1T1BROS8rMmprK1E1LzBleG9HRDZQUW1qQjZlNDR1L1pXQnNPejg3bCtLeStHODAKaFlCSmYyRjVrU3VEOVloRm02OWc2ZTUwMUN0bzBXalpsRUZhWlpCOVF2RFhic3VFWjRRVkhPTmRrRWtsM3BNSgo3R0VTYVM5QWRwZEZJclMxanUySTA1cENRdFNMZFZNZHExeXBxMDNCSlBESUVuMmZTVy90eEVteWwrS1UzRDBqCmhSbEtXV1IxdkJxTWM0NHVuWGNrYThZdkkrTHYxckVyTGVyS2tCRWlzbEUwT1dpWUFPUUxoUEhEVlNoenBUM1QKRHZpUXFwb2c1TGsrVW8wMllkVGt3ZXJzR1lDVnB0eVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdGRhODdMemRFUUxLb1lObmRMbktsbWt4ZlVEcmxzVlh0d08wbmp5RmlJd1BtakcyCmdsWE9jR0xXd3NMYXNzYlNoK2xZbExIYjEybHFONitmK2puc0p6OVBnQkpNWkQ1U3Q1TWsxK2p3c2VZSXVxVW0KdUFyUkhKQjNOV3dJN215YmhMdzRUb3Jya1pCd0J3UGgwQzR2WFJqZHBBQ1VxQXZBejJaTldHbnhVZ2l3aDBZVAo3MzFDUVAyaUJndDliVmxPTjl0SFc0cUt5a3EvTllxa0Z1amJ6LzQxWlBudnFjdXd1SXF1WUVNUi9iNk9KK3VnCi9DcU4xV0t3OGR1T09sTkRGelRWUFAwNGE3Skc5bDVUbSs1RHpFbTZ1L3poc2pDeHV3MVArbkVJN043OW1pK20KZE5zNVV2TWlmeXFQWmMvNHhWcW5pZGc4RHR3UjQ5Y0xtMUhGcVFJREFRQUJBb0lCQUV0NWdCMDdIdjdxaTdTUwpXQ1NvNFIraE5mdHBNTi81dFRpdmZ3Nld6RTRxNUdiNTcya1Z1SVFKWWw2Z2hpbmlRSXhOSElsTGNaWnRtTHJZCldLeUIwalZRSCsxbXF2S0lzOGlpZUk1dGowb24wc08xdk9aekJ1eTJRZVNZblBScGUvdVNMRVRkZ0gyQTJCN3gKUzQ4ZlBHV0Y1cWtsM0k0TG90SHpBbk9LTmJINFdVQlI2SnFtZjJaSXFMQW9OMjlxUU14RUg1SVFML0NuK3pFVgpFVjlxekYzT1lHWGlaWktaOEI1d1ZEcnhWZU02MU9uWmZtcVJYNllZVXpBNzh4bklhTHhSZ0Q4SXBPejVOSzBLCm5kdXIvQ21GZEdkdldVMnhJRTgrK2lUMTBuMUxHK1BuZ0VtaUNsL2dnQnl3SGVCNGZTTzRlZHo2blZyM1laTWoKOUs4TWU2a0NnWUVBNzlzSnJTdHB4TDZVaGhHSkFtQ0RTSVB0Y3E4cEZITGs1amdFQVhDb2pvbU56V3E0dmdkagplU0pybnFIZThFR0g5V1RaOEx3ZTV1ak1GYmFkYU9hVHVGdU1xWUY1QVQ5a2lCQ3V4YjYyaFp6Z24xNGJyRG5iCmRWUEE1bUhGTVpCZ2NjbUNuM2pwZ3haOW5PTHFXMkZiNTBUTkE1bWNacUQwendtTCs5RHl3OWNDZ1lFQXdoUUMKcFhuZWJoL1dwUnE2bkxVbGhtZGU1WnlOdG8zN21Sa1VQN2MxVktFQkZ3OEczb0drY1BQb2FoMmQwRmZLVkpUdQpvNTYwUFc1Wk1rcnVBZU0zR0dhRnFoNC93bitJc3pBQWt6VDMweEJJU0NMZjV6ZHk3L0hIbS9JNk1zVWNrTlRFCkdmY01Ib2ZMdnd0YkUyNUVueFNUQWpSdzBKMWlmQkV1MlZRZWtuOENnWUJLY3R5QUNiZWN2K0x0OGtkcW0zWmsKYmI2b0dFSlIvSStiL2NzUWYxMXlVTFBaRE1VbkJyZ1RnMkdRTFlJN1pMdkVxWGNVUisvM2tFNjRkcVJKU1RpVQp3cVhZZnoyRjY1MVN0b3JwQ2hjeFJjNWE2U1VCd2p1aUlVc0F0MXd6MURKN1h5YlNSUCtHRnRjS2VVeHc3TGxRCkFZVDVGeGI2cS84UXZFL2M2N0JPcFFLQmdDYTdSWmZ1alZSZTZFQkU2RThUMjZ4Si91ZEY2Z1l2cWJGeER0aDAKWUtGR0RHaWtxQk5Kdmg2SW5xNW13TEx1Z2tPRkFXY0g2aUtFWGlxcVIzdDY4K2pidFBzeFZEb2xwNHRUSGhwQwpyTjZqVmptSE5EWDVtK2VFMGZndVRDMExwMXJFQzJxL0lkMEo3c0J1ckx0Zyt6TGdNVUowWXJ0UFhYTXpIcTFpCm0wTlRBb0dBYndsYlVESHEyTW1NdWdWczhyemMySjk1NmNEWUFJTEVLWEh3UWdkeFFUWGlodlgvcmJqcnhTcEQKcTRWdmxWOFExam1Wam05R1ZYQ1JIbUZkUy8vQWtNOW5GWnZLTmVSQnJaeEZCWEg5QUpjSXM4Q3NCQllDSlI0Tgpmd0NrbVdZMFVGM2VWL2RZQ2w0VGdmbkRhQTFJV3lzd0R2eE40UEVLa3lSNWtWMVp5WXM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium-ca
  namespace: kube-system

---

apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBtV0s5WlY3b3VHSWpmV0RZOEtxZ1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURrd01qQTVNalEwTVZvWERUSTRNRGt3TVRBNQpNalEwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0ZGE4N0x6ZEVRTEtvWU5uZExuS2xta3hmVURybHNWWHR3TzBuanlGaUl3UG1qRzIKZ2xYT2NHTFd3c0xhc3NiU2grbFlsTEhiMTJscU42K2Yram5zSno5UGdCSk1aRDVTdDVNazErandzZVlJdXFVbQp1QXJSSEpCM05Xd0k3bXliaEx3NFRvcnJrWkJ3QndQaDBDNHZYUmpkcEFDVXFBdkF6MlpOV0dueFVnaXdoMFlUCjczMUNRUDJpQmd0OWJWbE9OOXRIVzRxS3lrcS9OWXFrRnVqYnovNDFaUG52cWN1d3VJcXVZRU1SL2I2T0ordWcKL0NxTjFXS3c4ZHVPT2xOREZ6VFZQUDA0YTdKRzlsNVRtKzVEekVtNnUvemhzakN4dXcxUCtuRUk3Tjc5bWkrbQpkTnM1VXZNaWZ5cVBaYy80eFZxbmlkZzhEdHdSNDljTG0xSEZxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQjI2czNsR2loMzdkbzdJZkhoM0VaL3ZSV3A4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0daemdHUHpUTFpEUHQxMkJzK3hJT1ptczdRTzY0YzAzYVBtbUV3M1R5SjRJdzVoM0RtU2NHCnZtUWc5ckE2bS9OVE9Sd3I1T1BROS8rMmprK1E1LzBleG9HRDZQUW1qQjZlNDR1L1pXQnNPejg3bCtLeStHODAKaFlCSmYyRjVrU3VEOVloRm02OWc2ZTUwMUN0bzBXalpsRUZhWlpCOVF2RFhic3VFWjRRVkhPTmRrRWtsM3BNSgo3R0VTYVM5QWRwZEZJclMxanUySTA1cENRdFNMZFZNZHExeXBxMDNCSlBESUVuMmZTVy90eEVteWwrS1UzRDBqCmhSbEtXV1IxdkJxTWM0NHVuWGNrYThZdkkrTHYxckVyTGVyS2tCRWlzbEUwT1dpWUFPUUxoUEhEVlNoenBUM1QKRHZpUXFwb2c1TGsrVW8wMllkVGt3ZXJzR1lDVnB0eVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtyT2VLQ3hsM3hDbWdtTjFuZHhaVU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURrd01qQTVNalEwTWxvWERUSTJNRGt3TWpBNQpNalEwTWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdZcUNWSWtRZkRNZmJnblpkN2NZUlpVVlY3UkUKT2JBMFQ3bXRCbnN5dWhBYnZiWTFUckRZU2F4RHVvQnREL0E2UU5MR21QYVhsWC9WN08yS0s1bVlsVHRkTGVxOAp0RHJTZThOT1d1MkFCQWhHdUpNZStqeE9GaktLelZOWXVWOGd1UFZvUEtqV2doYmx1NW5DenVkam5aTkI1L2FlCllQYkh5M0liSzRNNDR2cTUzUzNiRWp0SjAwODFwNFF3N3hnbE1OemZtVWh2YVZpNjNKaTBKMEJoL2RvamNNKzAKZzFwd3c0akJYcjJHZEdnUmRrUDNKMVkrYmFoYWphTHY4T2NlSGFmTm1hNk8zWWR0cHdqNlladG1VMTR1OU9MMAovMmllQ05jRnpUY1RJWGtJSU9qTWJyNUc3QVFDYXBTNWw2NUlqSFJzdndCbFNNRWphSmRNUW5jdm53SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWR1ck41Um9vZCszYU95SHg0ZHhHZgo3MFZxZkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSHBjVExhcm1ob0RQYWRRWTdvY3V4UDA1alpRZmlMazNyWkNpcmJEdzFxMlBybkYKWHVET1Zydmt6Y3A1LzVjNzRTeC9xWnBnQWVpeUJQYmF1d2FTM0xoR2lOWmVCSUVFOXVEK0tpenUwWm1tUGtkegprTTF3Z24wdjhwcENNNEFJWkFmc08xUnpwNkFBbnRtQS9yQXNuOWtmWHQ4K2xreEVQSU9NSS9LZzhDdWhvREx4Cm5PeUdVN044V0J6RHRuOWViTlVuaVlOSDV4MTBqNmVSMjZ5OXFyaVhhaFhqSC96ODhFck1lcFpIelh4QkhDYmIKWFc0akpqVDM0bkFheTV5TzAxRG5xSjRhbFQ5aWRmYUhlV3cxa2tnQjJzREJzM3lqZ1RpMkNsU2pweEt2bWQ5VApwUFV5d3NxTXlrOTl6aHpEdzk5bGxqZ2FrY0FoOUlUdk5QQVJpdDQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1lxQ1ZJa1FmRE1mYmduWmQ3Y1lSWlVWVjdSRU9iQTBUN210Qm5zeXVoQWJ2YlkxClRyRFlTYXhEdW9CdEQvQTZRTkxHbVBhWGxYL1Y3TzJLSzVtWWxUdGRMZXE4dERyU2U4Tk9XdTJBQkFoR3VKTWUKK2p4T0ZqS0t6Vk5ZdVY4Z3VQVm9QS2pXZ2hibHU1bkN6dWRqblpOQjUvYWVZUGJIeTNJYks0TTQ0dnE1M1MzYgpFanRKMDA4MXA0UXc3eGdsTU56Zm1VaHZhVmk2M0ppMEowQmgvZG9qY00rMGcxcHd3NGpCWHIyR2RHZ1Jka1AzCkoxWStiYWhhamFMdjhPY2VIYWZObWE2TzNZZHRwd2o2WVp0bVUxNHU5T0wwLzJpZUNOY0Z6VGNUSVhrSUlPak0KYnI1RzdBUUNhcFM1bDY1SWpIUnN2d0JsU01FamFKZE1RbmN2bndJREFRQUJBb0lCQUVUMENRei9MRDFqcFYzNQo2bDJwZ045Qmh6SVJDb0dYRW53WkJka2FTVzlhejlkZU5FM04yYkVkeTUrRm85V2EyOVkrZ2Z6N1ZmUXdjRklTCkt6anZaeG83NVMyM3hQVmRRNkpPYWZzaFJJdXJPeThGVTNNSnl6UkRXNHBkbUcycXc2akIzaHBHZU80dUpEa2IKUmZtYkhMV0dRbVBYVElQMVNDZG1odUdReGRLdnJLdGVDNks5OFBxaVE0Y09jTWF6RXhvb0w2QWNHQmdzekIvYgpVU2RJSFIvN2lmNXVKbStZcnJkak1TTW1MaFQ3T2ZwcEpvMm5kdHVOTlpFODc1R05WUTVRWTBRRnFscEdJK21GClZwZXFMMVZDWGxnVS9Ed29sQlhYUW9CU01iS0xab1NnUDJ6MU5HcGNMRGsvcU1hRklISXlSYnFHc3lWQ3hIWkoKSS9ISi9hRUNnWUVBNFlEVEhhZWFMQ29QSFU2bXB5NUZsWXZKWDlRWk5TR3d2cEVhSEt1b0lVQ0ZTUTZpa1Jwagp3aHR0akJUZjFWcGZ1dE1PaTNtazFpcVhRY2NGaFNxL01FQVNSVkFzd3RKTXNXV1J1dzJzM25wMFV1OGowa3VKClBWTWNWcHNOTFhiTUpRSGpLcW9QMmZxTFFLZmlseG5HVnl5OEtDTW1SZUExRENGbVN2YkpMZkVDZ1lFQTI3Y2UKUFhxcDJLaHZ0ZFRidmVoaDZ5QmYrZEdxSjQrdytRZ0o2WG42NXpIcWcwa0l2VFNzdHhrbGxkczJrR0lWeFJVaQpoNmt5a2IvMUxsT0gwZXNyOTk1aEx2M0VtNk5mVk5YY21SUmx2alBKZHduWDlHa25qVEtOSlpjdHo2U0xuRTNSCnQydUpYT2hYMk9sNkhub2RFR3VzZUxPSG5GZ29LdDdMd3FYUTVvOENnWUVBc1ZCbXNJNjFQN3ppblp6V2xlWmcKZUxLdDZWZ1JhaUhQcEVqY1MyYitrUWIyeHZkbkJNbkhYejNKNmJnUU9PY1RGd2dXQzczZXl6ZzZMMUtiR0pjQQpOcVJxdVczTmhITndNcDAyOWVwTzM3RlIvbFJqeWx2eTBmR2orc1Y0bXlNcWFuOE5iT0xFREJaaG9MbGlCb1lSCjIwSWx3VG5DUW5lRnZzQVVleVdLRTBFQ2dZRUFtcjFnNHRPZEF5VzlaMFkrYklWWlVRdEFET1dJL012S1M5bEoKZ2RHU3ozanNQUUlXMFlwamlhQ0FSQVpiYTF4cEVLQk43VlZRZEMzSk01Tkl1S0wwR0dIWitBcHBpV09LSkdscQpMN1daNGxiK3NJT1NRR1Erb3NiVGVZSDdsWjNCWlplNDk0RVpBUUh4dktiU2h0eGgwOHJCY1ZDZlZaRVEyUUNJCmFOSDNTaWtDZ1lBSFh5QlF2WXVrUDBFczd1TDg2Nk85Z29LUnVGeEFRYTB3THBxa3NkZmxJaFh6cllVZENsbFoKK3JFVUswTlVTVjZlQlVwa2Ywd2NTaEE3OFpBWDV6dEU3clB3eFBWT0tkSXY0a0JkS2NXd1FvaVVWck1CaWVsQQo1Znk4RmI0ay9HSVd2YWduOEt1M2hhMHFmSjVxSkNnWlBwbmszR3ZBQThUOGRxUmJrRm0xN3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls

---

apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBtV0s5WlY3b3VHSWpmV0RZOEtxZ1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURrd01qQTVNalEwTVZvWERUSTRNRGt3TVRBNQpNalEwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0ZGE4N0x6ZEVRTEtvWU5uZExuS2xta3hmVURybHNWWHR3TzBuanlGaUl3UG1qRzIKZ2xYT2NHTFd3c0xhc3NiU2grbFlsTEhiMTJscU42K2Yram5zSno5UGdCSk1aRDVTdDVNazErandzZVlJdXFVbQp1QXJSSEpCM05Xd0k3bXliaEx3NFRvcnJrWkJ3QndQaDBDNHZYUmpkcEFDVXFBdkF6MlpOV0dueFVnaXdoMFlUCjczMUNRUDJpQmd0OWJWbE9OOXRIVzRxS3lrcS9OWXFrRnVqYnovNDFaUG52cWN1d3VJcXVZRU1SL2I2T0ordWcKL0NxTjFXS3c4ZHVPT2xOREZ6VFZQUDA0YTdKRzlsNVRtKzVEekVtNnUvemhzakN4dXcxUCtuRUk3Tjc5bWkrbQpkTnM1VXZNaWZ5cVBaYy80eFZxbmlkZzhEdHdSNDljTG0xSEZxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQjI2czNsR2loMzdkbzdJZkhoM0VaL3ZSV3A4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0daemdHUHpUTFpEUHQxMkJzK3hJT1ptczdRTzY0YzAzYVBtbUV3M1R5SjRJdzVoM0RtU2NHCnZtUWc5ckE2bS9OVE9Sd3I1T1BROS8rMmprK1E1LzBleG9HRDZQUW1qQjZlNDR1L1pXQnNPejg3bCtLeStHODAKaFlCSmYyRjVrU3VEOVloRm02OWc2ZTUwMUN0bzBXalpsRUZhWlpCOVF2RFhic3VFWjRRVkhPTmRrRWtsM3BNSgo3R0VTYVM5QWRwZEZJclMxanUySTA1cENRdFNMZFZNZHExeXBxMDNCSlBESUVuMmZTVy90eEVteWwrS1UzRDBqCmhSbEtXV1IxdkJxTWM0NHVuWGNrYThZdkkrTHYxckVyTGVyS2tCRWlzbEUwT1dpWUFPUUxoUEhEVlNoenBUM1QKRHZpUXFwb2c1TGsrVW8wMllkVGt3ZXJzR1lDVnB0eVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRREVsano1elhZQ1pDVEZBS2Z4em5LREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T1RBeU1Ea3lORFF5V2hjTk1qWXdPVEF5TURreQpORFF5V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd09FUXc2Y0ZpbG5ncTJRZ3lOMGkKQzdWUlJ1Z0pwNzlhdmgvUk9Ddm04bUpmTVJIcUFrRWU3Mmlua0Ntd2RjN2E1dmdzcmhWR0MrY1lObm9aZUtUMwpjN0x5R2FtYURGdzJvdEQrY3FVUCtYbXhnQXdLOXhXSHJQakJLZDJiS3d2QXJvZEU1NFBqeDI0YU4vdzA3a0tsClpMZ2FNTTFJL0NCZUNNNnFUcnZvS1JTbVdNemROZEZwY1pvdlQ3Wnhpc0pqRGRKVjZPNzhwbEhlZ0todm85L20Kd2pqTTRXdzVQMThCaGpGaG9rK3BudERORGhOK2xtRis5U3EzV2dNRFQ1L1JHSFcrZ29yUzVpYnkrbUtiK3VUSwpxSGVGaXdEZCs3VHBISWRiNEgrNHdVYXR4NFBSWEwyTnRDNVR5aDczWUl2QkxRWGdOTHJzczc1YTJvSzRDcXo1Cnd3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRZHVyTjVSb29kKzNhTwp5SHg0ZHhHZjcwVnFmREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCRWpiSkRFcmhsK3dEcG9zeGFMZlJ0dFBMRmRSSE4KUFRtOUdDVlBpK2d2dE5GbHdNdkFZU1RCNnVNNFFSRUtRZFdhQVoyeitiZnZ4Y2h3dGxxUW9xMjI4UCsyUjI3TgpsRW1mSWlBYS9GamUzRHVhakRiLzlLMFNjQy9yZWs3clppUVF0eFZaK0V4cG1PekRqb29MTmVhZmtxcm9QSVloCmJDN2RIdUhOSm9zdElkNUxRcUcxMlFyNEZWRk5Kb3pUZ0Y3ZzRvbnpTOFh5Rk1lamxubGRuT1VLa2V6ZjdHN24KbXVaNU1uU0hzdjBKSzZ0RUNNUkFqYlR4Vk5pcXNzSlRpUnkxS3dCOG1tdmFvSDVlUkdsWUgvVWhtSzdLUWRZUwp2dGV5a0xzbUNLV3BWMFJMaFVFKytVQ2ZFWWpHcC95dmxuQSt5MXFnalUzcVMvNStYbEJFTGI3QQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd09FUXc2Y0ZpbG5ncTJRZ3lOMGlDN1ZSUnVnSnA3OWF2aC9ST0N2bThtSmZNUkhxCkFrRWU3Mmlua0Ntd2RjN2E1dmdzcmhWR0MrY1lObm9aZUtUM2M3THlHYW1hREZ3Mm90RCtjcVVQK1hteGdBd0sKOXhXSHJQakJLZDJiS3d2QXJvZEU1NFBqeDI0YU4vdzA3a0tsWkxnYU1NMUkvQ0JlQ002cVRydm9LUlNtV016ZApOZEZwY1pvdlQ3Wnhpc0pqRGRKVjZPNzhwbEhlZ0todm85L213ampNNFd3NVAxOEJoakZob2srcG50RE5EaE4rCmxtRis5U3EzV2dNRFQ1L1JHSFcrZ29yUzVpYnkrbUtiK3VUS3FIZUZpd0RkKzdUcEhJZGI0SCs0d1VhdHg0UFIKWEwyTnRDNVR5aDczWUl2QkxRWGdOTHJzczc1YTJvSzRDcXo1d3dJREFRQUJBb0lCQUZ0OVJwVHYwRVo0YklRUAp5aWRORVQycGc0U1ZReU14TnN0UlQwNE1NUStQRHVVNVFKMVNJMmpmWlFBU2JsUHJTMVZjcWVEblVXTUsrcWE0Cmt3Vnhocmo0VEROVkNpL0x1OVRPT3F2SjFRSjZzWEh5QkcrQVpHdHRVVDdaRWFYQS9PUXNZTWhLZk15WDB0TDAKakd6cDZ3Y1Q5c1JvVTdMWWJaSlM2V0RRYkFhenBFRmU0SkZ2ejNRdUFldFhVWHg5SUlGUDhZRmExTjRKazV0RApEVUYvL0dTUkJ1U3RYU1BKVDA3amxBb2FrNG9KU1lQbk5YdjlUdDVSTENsRHlvaFFJMU1iWkpERVlWamZWeERxClJxOHpZNHZRbTNSb1J0MW1leDdOd1JvTEFsbk1jV0dEL29mMkI5N09sUGNWdGdZQ1MrY2hzU2NiS1Q2MUN5MzUKaXduU3lTRUNnWUVBNmRiRkVPTjQ4YWg5WkpkWnNaUkFYQ1loK3l0NTZ3OXc2RExBQXRSUHh4RG1UWm5tYXNNUgpOMWU3QVhWZkRLWWsrNXhiMnVxQjl5czJicDJ3SkJxd1ZqYUdJRDFFejVlc1EwMFpxcXQwUUFGWHR4OFFpQmR0CjVLN1dUTHVIRWpBaGFweWFaRnpTUDB6eDBPUVYweXY5V3FoR0dYSVY3Z0JITVdZZHBIbDNWYUVDZ1lFQTB5aVAKTE5yWTVSMWJrMHFDSjdDRlowWERSN29YS3BOaEdsMzZOV1J4YjhkSUlqZVU0Tmd0MUNDNkt1RjB4ZFF0eG81TQpxcC9RaVJiSWUxeUJPSHVFV1VDb2hmaSt5cmVTNlFZZ1Y4TmhlMUpRWHR0UDlIa3FPQktPRXJ1RENieEhUUFdnCnNuM29RSitKTXNVU3hYN3gvUE1QdW4vOHRVTDUxMkVvOHFZSWpPTUNnWUVBbVkrKzdtNVRtRzlMbVdtREw0anEKRXhtL3F4Qk1DaitqcC9qYiszK3R2RTZ1enp0SUE4aUNYOU92TFRBRThXdVNVZUhHdUtiVUhwczBMY1JFVGhGdwp4ODBhbThWZ2tPdEw1dzZVMG0yeDgrNXR5Z1lPZHpEYnJCZmRCNXNIQXJ5MDFTeHVmNFl0VkFDVnROWjBOcTltCnU4aFI4SmZwS3RqbjU5cmxrSU5zQ01FQ2dZQVZVckV5bkY3dXRBbzlVM2JWUHpRWmU2ZitwRUlXb0k5YnRFWEMKQW9TWi93dS91TkVsNjI2bFR6QzloOHJjOTFJd0RNcWRLRXBNcmFwTkdzaEp4ZDlWaS92NG0yZlkzTFRQSnprNAo0NWdDZGd0N3FMWG9RQndOVVlKYlRlZ3JvWUdwdWR3aWFpaDc3aUJTcWlmOUhaYWVMb1ZXRmZxVTYxQ0RlV0pECkxwVUtkUUtCZ1FDU1p1MVYvZlZRaENkeldHWWl1UzJWbzdibnhMQXdiakdKR0R4a0ljL29oTUdpR2FZcTZwU08KREMwV0J3UnFRVXV2RGptU2ZNTnRQa1phVjBGMXN6TWNDV291S2E0ekoxdVJpc0ZiWEg3Rm9vMUNucXBLclE0eApaVnE0T2xVUDFYTjZCMyt3aTl3bkJuam1Gck9mVU9jWEsrSnhiYTJOQmNqSVAzQlVzaUFqZmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls

---

apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-distributed-lru: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode-annotation: "false"
  bpf-lb-sock: "false"
  bpf-lb-source-range-all-types: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv6-cidr: fd00::/104
  cluster-pool-ipv6-mask-size: "120"
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  default-lb-service-ipam: lbipam
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  enable-envoy-config: "true"
  enable-experimental-lb: "false"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-port: "false"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ingress-controller: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  enable-internal-traffic-policy: "true"
  enable-ipv4: "false"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-lb-ipam: "true"
  enable-local-redirect-policy: "false"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-node-port: "false"
  enable-node-selector-labels: "false"
  enable-non-default-deny-policies: "true"
  enable-policy: default
  enable-policy-secrets-sync: "true"
  enable-runtime-device-detection: "true"
  enable-sctp: "false"
  enable-source-ip-verification: "true"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  enforce-ingress-https: "true"
  envoy-access-log-buffer-size: "4096"
  envoy-base-id: "0"
  envoy-config-retry-interval: 15s
  envoy-keep-cap-netbindservice: "false"
  external-envoy-proxy: "false"
  health-check-icmp-failure-threshold: "3"
  http-retry-count: "3"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: drop
  hubble-metrics-server: :9965
  hubble-metrics-server-enable-tls: "false"
  hubble-prefer-ipv6: "true"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  ingress-default-lb-mode: dedicated
  ingress-hostnetwork-enabled: "false"
  ingress-hostnetwork-nodelabelselector: ""
  ingress-hostnetwork-shared-listener-port: "8080"
  ingress-lb-annotation-prefixes: lbipam.cilium.io nodeipam.cilium.io service.beta.kubernetes.io
    service.kubernetes.io cloud.google.com
  ingress-secrets-namespace: cilium-secrets
  ingress-shared-lb-service-name: cilium-ingress
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  ipam-cilium-node-update-rate: 15s
  iptables-random-fully: "false"
  k8s-require-ipv4-pod-cidr: "false"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "false"
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: '[::1]:9234'
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  policy-secrets-namespace: cilium-secrets
  policy-secrets-only-from-secrets-namespace: "true"
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-concurrent-retries: "128"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  tunnel-source-port-range: 0-0
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium-config
  namespace: kube-system

---

apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: hubble-relay-config
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator-ingress-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    role.kubernetes.io/networking: "1"
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/part-of: cilium
    cilium.io/ingress: "true"
    role.kubernetes.io/networking: "1"
  name: cilium-ingress
  namespace: kube-system
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    nodePort: null
    port: 80
    protocol: TCP
  - name: https
    nodePort: null
    port: 443
    protocol: TCP
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
    role.kubernetes.io/networking: "1"
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
    role.kubernetes.io/networking: "1"
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
    role.kubernetes.io/networking: "1"
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
    role.kubernetes.io/networking: "1"
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
        kops.k8s.io/managed-by: kops
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: ::1
            httpHeaders:
            - name: brief
              value: "true"
            - name: require-k8s-connectivity
              value: "false"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: ::1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: ::1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
          name: cilium-netns
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      - args:
        - |-
          for i in {1..5}; do \
            [ -S /var/run/cilium/monitor1_2.sock ] && break || sleep 10;\
            done; \
          cilium-dbg monitor
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: cilium-monitor
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium
          name: cilium-run
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
        seccompProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        name: cilium-netns
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    type: OnDelete

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
    role.kubernetes.io/networking: "1"
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        kops.k8s.io/managed-by: kops
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.17.7@sha256:a610be2562d0f5a8945a27df7d5681711263ce92e09947e867fc37fc9ab08788
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: ::1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: ::1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
    role.kubernetes.io/networking: "1"
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
        kops.k8s.io/managed-by: kops
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.17.7@sha256:9394312ce65c3c253a8c26a6c292f58736e75c78d1446ecfcd244f1418bebe77
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs

---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium
spec:
  controller: cilium.io/ingress-controller

---

apiVersion: v1
kind: Endpoints
metadata:
  creationTimestamp: null
  labels:
    addon.kops.k8s.io/name: networking.cilium.io
    app.kubernetes.io/managed-by: kops
    role.kubernetes.io/networking: "1"
  name: cilium-ingress
  namespace: kube-system
subsets:
- addresses:
  - ip: 192.192.192.192
  ports:
  - port: 9999
